/* Generated by re2rust */
// re2rust $INPUT -o $OUTPUT -b

fn lex(s: &[u8]) -> bool {
    let mut cursor = 0;
    
{
    #[allow(unused_assignments)]
    let mut yych : u8 = 0;
    let mut yystate : usize = 0;
    let yybm: [u8; 256] = [
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
        128, 128, 128, 128, 128, 128, 128, 128,
        128, 128,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,
    ];
    'yyl: loop {
        match yystate {
            0 => {
                yych = unsafe {*s.get_unchecked(cursor)};
                cursor += 1;
                if yych <= 0x30 {
                    yystate = 1;
                    continue 'yyl;
                }
                if yych <= 0x39 {
                    yystate = 2;
                    continue 'yyl;
                }
                yystate = 1;
                continue 'yyl;
            }
            1 => { return false; },
            2 => {
                yych = unsafe {*s.get_unchecked(cursor)};
                if (yybm[0+yych as usize] & 128) != 0 {
                    cursor += 1;
                    yystate = 2;
                    continue 'yyl;
                }
                { return true; }
            }
            _ => panic!("internal lexer error"),
        }
    }
}

}

fn main() {
    assert!(lex(b"1234\0"));
}
